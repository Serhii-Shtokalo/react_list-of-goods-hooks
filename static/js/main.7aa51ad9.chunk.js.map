{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","handleSort","newSort","visibleGoods","ALPHABET","sort","a","b","nameA","toLowerCase","nameB","localeCompare","LENGTH","length","getVisibleGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAMMC,EAAa,SAACC,GAAD,OAAuBJ,EAAYI,IAmCtD,IAAMC,EA5BN,WACE,IAAIA,EAAY,UAAOV,GAEvB,OAAQI,GACN,KAAKL,EAASY,SACZD,EAAeA,EAAaE,MAAK,SAACC,EAAGC,GACnC,IAAMC,EAAQF,EAAEG,cACVC,EAAQH,EAAEE,cAEhB,OAAOV,EACHW,EAAMC,cAAcH,GACpBA,EAAMG,cAAcD,MAE1B,MACF,KAAKlB,EAASoB,OACZT,EAAeA,EAAaE,MAAK,SAACC,EAAGC,GACnC,OAAOR,EAAaQ,EAAEM,OAASP,EAAEO,OAASP,EAAEO,OAASN,EAAEM,UAQ7D,OAAOV,EAIYW,GAErB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYpB,IAAaL,EAASY,WAEpCc,QAAS,kBAAMjB,EAAWT,EAASY,WALrC,iCAUA,wBACEY,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYpB,IAAaL,EAASoB,SAEpCM,QAAS,kBAAMjB,EAAWT,EAASoB,SALrC,4BAUA,wBACEI,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAalB,IAEfmB,QArEc,WACpBlB,GAAeD,IA+DX,sBAUEF,IAAaL,EAASI,MAAQG,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAxEU,WAClBpB,EAAYN,EAASI,MACrBI,GAAc,IAmER,sBAUJ,6BACGG,EAAagB,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YChHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7aa51ad9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const hadnleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleSort = (newSort: SortType) => setSortType(newSort);\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  function getVisibleGoods() {\n    let visibleGoods = [...goodsFromServer];\n\n    switch (sortType) {\n      case SortType.ALPHABET:\n        visibleGoods = visibleGoods.sort((a, b) => {\n          const nameA = a.toLowerCase();\n          const nameB = b.toLowerCase();\n\n          return isReversed\n            ? nameB.localeCompare(nameA)\n            : nameA.localeCompare(nameB);\n        });\n        break;\n      case SortType.LENGTH:\n        visibleGoods = visibleGoods.sort((a, b) => {\n          return isReversed ? b.length - a.length : a.length - b.length;\n        });\n        break;\n      default:\n        // No sorting needed\n        break;\n    }\n\n    return visibleGoods;\n  }\n\n  // Assign visibleGoods directly within the component function\n  const visibleGoods = getVisibleGoods();\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => handleSort(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => handleSort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={hadnleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}